replicaCount: 1
auth: false

host: "dev.intechcmms.com"

image:
  repository: intechww-docker-local.jfrog.io/oauth2-proxy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ''


deploymentAnnotations: {}

resources:
  requests:
    memory: ""
    cpu: ""
  limits:
    memory: ""
    cpu: ""

serviceAccount:
  tokenExpiration: 3600

imagePullSecret: "regcred"
startupDelay: 1s
startupDelay_sec: 1

deployment:
  full: false
  release:
    enabled: true

env:
  oauth2ProxyCookieSecret: "RnQ1bklZM1lSbHpmaGt2aU1jUWVvMnRFazdTd1FTQ1c="

arguments: ["--cookie-name","oidc_token","--email-domain","*","--cookie-secure","false","--cookie-samesite","none","--cookie-expire","3m","--cookie-refresh" ,"30s","--silence-ping-logging","true","--skip-provider-button","false","--reverse-proxy","true","--whitelist-domain","*"]
alphaConfig:
  injectRequestHeaders:
  - name: X-Forwarded-Groups
    values:
    - claim: groups
  - name: X-Forwarded-User
    values:
    - claim: user
  - name: X-Forwarded-Email
    values:
    - claim: email
  - name: X-Forwarded-Preferred-Username
    values:
    - claim: preferred_username
  - name: X-Forwarded-Access-Token
    values:
    - claim: access_token
  - name: Authorization
    values:
    - claim: id_token
      prefix: 'Bearer '
  injectResponseHeaders:
  - name: X-Auth-Request-User
    values:
    - claim: user
  - name: X-Auth-Request-Email
    values:
    - claim: email
  - name: X-Auth-Request-Preferred-Username
    values:
    - claim: preferred_username
  - name: X-Auth-Request-Groups
    values:
    - claim: groups
  - name: X-Auth-Request-Access-Token
    values:
    - claim: access_token
  - name: Authorization
    values:
    - claim: id_token
      prefix: 'Bearer '
  metricsServer:
    BindAddress: ""
    SecureBindAddress: ""
    TLS: null
  providers:
  - ADFSConfig: {}
    azureConfig:
      tenant: common
    bitbucketConfig: {}
    clientID: cmms
    clientSecret: XFMnngiW2HfeALxInpnJn927cFh4pAE2
    githubConfig: {}
    gitlabConfig: {}
    googleConfig: {}
    id: oidc=cmms
    keycloakConfig: {}
    loginGovConfig: {}
    loginURL: http://localhost:8080/auth/realms/tenant1/protocol/openid-connect/auth
    loginURLParameters:
    - default:
      - force
      name: approval_prompt
    oidcConfig:
      audienceClaims:
      - aud
      emailClaim: email
      groupsClaim: groups
      insecureAllowUnverifiedEmail: true
      insecureSkipIssuerVerification: true
      insecureSkipNonce: true
      issuerURL: http://localhost:8080/auth/realms/tenant1
      jwksURL: http://localhost:8080/auth/realms/tenant1/protocol/openid-connect/certs
      skipDiscovery: true
      userIDClaim: email
    provider: oidc
    redeemURL: http://localhost:8080/auth/realms/tenant1/protocol/openid-connect/token
  server:
    BindAddress: 0.0.0.0:4180
    SecureBindAddress: ""
    TLS: null
  upstreamConfig: {}
  tenantLoader:
    type: "config"
    config:
      filePath: "/conf/tenants/tenants.yaml"
  tenantMatcher:
    rules:
      - source: "host" 
        header: ""
        queryParam: ""
        expr: "^[^.]*"
tenants:
  tenants:
  - id: "iis200"
    provider:
      type: "oidc"
      clientID: cmms
      clientSecret: "8347yc9n@4@R@Bpweu0r92"
      id: oidc=cmms
      loginURL: https://sso.dev.intechcmms.com/auth/realms/iis200/protocol/openid-connect/auth
      loginURLParameters:
      - default:
        - force
        name: approval_prompt
      oidcConfig:
        audienceClaims:
        - aud
        emailClaim: email
        groupsClaim: groups
        insecureAllowUnverifiedEmail: true
        insecureSkipIssuerVerification: true
        insecureSkipNonce: true
        issuerURL: https://sso.dev.intechcmms.com/auth/realms/iis200
        jwksURL: https://sso.dev.intechcmms.com/auth/realms/iis200/protocol/openid-connect/certs
        skipDiscovery: true
        userIDClaim: email
      provider: oidc
      redeemURL: https://sso.dev.intechcmms.com/auth/realms/iis200/protocol/openid-connect/token
